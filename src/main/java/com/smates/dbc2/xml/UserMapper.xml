<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smates.dbc2.mapper.UserDao" >

  <resultMap id="BaseResultMap" type="user" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="accountNumber" property="accountNumber" jdbcType="CHAR" />
    <result column="nickName" property="nickName" jdbcType="CHAR" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="enable" property="enable" jdbcType="CHAR" />
    <result column="createDate" property="createDate" jdbcType="DATE" />
    <result column="e_mail" property="eMail" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, accountNumber,nickName, password, role, enable, createDate, e_mail
  </sql>
  
  <!--
 	 des:
 	 	根据accountNumber查找user
 	 example sql:
	 	 select *
	 	 from s_user
		 where accountNumber = admin
  -->
  <select id="selectByAccountNumber" resultMap="BaseResultMap" parameterType="java.lang.String">
  select *
  from s_user
  where accountNumber = #{accountNumber}
  </select>
  
  
  <insert id = "insertUser" parameterType="user" useGeneratedKeys="true" keyProperty="id">
  insert into s_user 
  (accountNumber,nickName, password, role, enable, createDate, e_mail)
  values 
  (#{accountNumber},N#{nickName},#{password},#{role},#{enable},#{createDate},#{eMail})
  </insert>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!--  自动生成
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
   
    from s_user
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from s_user
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="user" >
    insert into s_user (id, user_name, password, 
      role, enable, createdate, e_mail
      )
    values (#{id,jdbcType=CHAR}, #{userName,jdbcType=CHAR}, #{password,jdbcType=CHAR}, 
      #{role,jdbcType=CHAR}, #{enable,jdbcType=CHAR}, #{createdate,jdbcType=DATE}, #{eMail,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="user" >
    insert into s_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="eMail != null" >
        e_mail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=CHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=CHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
      <if test="eMail != null" >
        #{eMail,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="user" >
    update s_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=CHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=DATE},
      </if>
      <if test="eMail != null" >
        e_mail = #{eMail,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="user" >
    update s_user
    set user_name = #{userName,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      role = #{role,jdbcType=CHAR},
      enable = #{enable,jdbcType=CHAR},
      createdate = #{createdate,jdbcType=DATE},
      e_mail = #{eMail,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  
  <select id="findAllUser" resultType="user" >
  	select user_id,
  	from s_user
  </select>
  -->
  
</mapper>